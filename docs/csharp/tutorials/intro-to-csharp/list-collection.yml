### YamlMime:Tutorial
title: <span data-ttu-id="2f702-101">Научитесь управлять коллекциями данных с использованием универсального типа списка</span><span class="sxs-lookup"><span data-stu-id="2f702-101">Learn to manage data collections using the generic list type</span></span>
metadata:
  title: Коллекции данных. Интерактивное вводное руководство по C#
  description: В этом руководстве для интерактивного изучения C# используется браузер. Вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения непосредственно в браузере.
  audience: Developer
  ms.custom: mvc
  ms.date: 10/23/2018
  level: Beginner
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: 8ee13ec60f0504982c33ecc61940b731d320d2de
  ms.sourcegitcommit: c4e9d05644c9cb89de5ce6002723de107ea2e2c4
  ms.translationtype: HT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 05/19/2019
  ms.locfileid: "65880561"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="2f702-105">Это руководство поможет в интерактивном изучении C#. С помощью браузера вы напишете код C# и сможете просмотреть результаты его компиляции и выполнения.</span><span class="sxs-lookup"><span data-stu-id="2f702-105">This tutorial teaches you C# interactively, using your browser to write C# code and see the results of compiling and running your code.</span></span> <span data-ttu-id="2f702-106">Он содержит ряд уроков, где вы создаете, меняете и изучаете коллекции и массивы.</span><span class="sxs-lookup"><span data-stu-id="2f702-106">It contains a series of lessons that create, modify, and explore collections and arrays.</span></span>
- title: <span data-ttu-id="2f702-107">Создание списков</span><span class="sxs-lookup"><span data-stu-id="2f702-107">Create lists</span></span>
  durationInMinutes: 2
  content: >
    <span data-ttu-id="2f702-108">Запустите приведенный ниже код в интерактивном окне.</span><span class="sxs-lookup"><span data-stu-id="2f702-108">Run the following code in the interactive window.</span></span> <span data-ttu-id="2f702-109">Для этого введите следующий блок кода в интерактивном окне (замените `<name>` своим именем) и нажмите кнопку **Выполнить**:</span><span class="sxs-lookup"><span data-stu-id="2f702-109">To do that, type the following code block in the interactive window (replace `<name>` with your name) and click the **Run** button:</span></span>


    ```csharp

    var names = new List<string> { "<name>", "Ana", "Felipe" };

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="2f702-110">Вы создали список строк, добавили три имени в этот список и вывели имена прописными буквами.</span><span class="sxs-lookup"><span data-stu-id="2f702-110">You've created a list of strings, added three names to that list, and printed out the names in all CAPS.</span></span> <span data-ttu-id="2f702-111">Для циклического прохода по списку вы примените концепции, которые изучили в предыдущих руководствах.</span><span class="sxs-lookup"><span data-stu-id="2f702-111">You're using concepts that you've learned in earlier tutorials to loop through the list.</span></span>


    <span data-ttu-id="2f702-112">В коде для отображения имен используется функция [интерполяции строк](../../language-reference/tokens/interpolated.md).</span><span class="sxs-lookup"><span data-stu-id="2f702-112">The code to display names makes use of the [string interpolation](../../language-reference/tokens/interpolated.md) feature.</span></span> <span data-ttu-id="2f702-113">Если перед `string` добавить символ `$`, код C# можно внедрять в объявление строки.</span><span class="sxs-lookup"><span data-stu-id="2f702-113">When you precede a `string` with the `$` character, you can embed C# code in the string declaration.</span></span> <span data-ttu-id="2f702-114">Фактическая строка заменяет код C# генерируемым значением.</span><span class="sxs-lookup"><span data-stu-id="2f702-114">The actual string replaces that C# code with the value it generates.</span></span> <span data-ttu-id="2f702-115">В этом примере она заменяет `{name.ToUpper()}` именами, буквы каждого из которых преобразованы в прописные, так как вызван метод <xref:System.String.ToUpper%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2f702-115">In this example, it replaces the `{name.ToUpper()}` with each name, converted to capital letters, because you called the <xref:System.String.ToUpper%2A?displayProperty=nameWithType> method.</span></span>


    <span data-ttu-id="2f702-116">Продолжим изучение.</span><span class="sxs-lookup"><span data-stu-id="2f702-116">Let's keep exploring.</span></span>


    > [!NOTE]

    > <span data-ttu-id="2f702-117">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="2f702-117">This online coding experience is in preview mode.</span></span> <span data-ttu-id="2f702-118">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="2f702-118">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="2f702-119">Изменение содержимого списка</span><span class="sxs-lookup"><span data-stu-id="2f702-119">Modify list contents</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="2f702-120">В созданной коллекции используется тип <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2f702-120">The collection you created uses the <xref:System.Collections.Generic.List%601> type.</span></span> <span data-ttu-id="2f702-121">При применении такого типа сохраняются последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="2f702-121">This type stores sequences of elements.</span></span> <span data-ttu-id="2f702-122">Тип элементов указывается в угловых скобках.</span><span class="sxs-lookup"><span data-stu-id="2f702-122">You specify the type of the elements between the angle brackets.</span></span>


    <span data-ttu-id="2f702-123">Важный аспект типа <xref:System.Collections.Generic.List%601> — возможность увеличения или уменьшения, что позволяет добавлять или удалять элементы.</span><span class="sxs-lookup"><span data-stu-id="2f702-123">One important aspect of this <xref:System.Collections.Generic.List%601> type is that it can grow or shrink, enabling you to add or remove elements.</span></span> <span data-ttu-id="2f702-124">Вы можете просмотреть результаты, изменив содержимое после его отображения.</span><span class="sxs-lookup"><span data-stu-id="2f702-124">You can see the results by modifying the contents after you've displayed its contents.</span></span> <span data-ttu-id="2f702-125">Добавьте следующий код после кода, который вы уже написали (ниже цикла, который выводит содержимое):</span><span class="sxs-lookup"><span data-stu-id="2f702-125">Add the following code below the code you've already written (below the loop that prints the contents):</span></span>


    ```csharp

    Console.WriteLine();

    names.Add("Maria");

    names.Add("Bill");

    names.Remove("Ana");

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="2f702-126">В конец списка добавлены еще два имени.</span><span class="sxs-lookup"><span data-stu-id="2f702-126">You've added two more names to the end of the list.</span></span> <span data-ttu-id="2f702-127">При этом одно имя удалено.</span><span class="sxs-lookup"><span data-stu-id="2f702-127">You've also removed one as well.</span></span> <span data-ttu-id="2f702-128">Выходные данные из этого блока кода показывают начальное содержимое, а затем выводят пустую строку и новое содержимое.</span><span class="sxs-lookup"><span data-stu-id="2f702-128">The output from this block of code shows the initial contents, then prints a blank line and the new contents.</span></span>


    <span data-ttu-id="2f702-129"><xref:System.Collections.Generic.List%601> позволяет добавлять ссылки на отдельные элементы по **индексу**.</span><span class="sxs-lookup"><span data-stu-id="2f702-129">The <xref:System.Collections.Generic.List%601> enables you to reference individual items by **index** as well.</span></span> <span data-ttu-id="2f702-130">Доступ к элементам осуществляется при помощи токенов `[` и `]`.</span><span class="sxs-lookup"><span data-stu-id="2f702-130">You access items using the `[` and `]` tokens.</span></span> <span data-ttu-id="2f702-131">Добавьте следующий фрагмент после написанного кода и протестируйте результат:</span><span class="sxs-lookup"><span data-stu-id="2f702-131">Add the following code below what you've already written and try it:</span></span>


    ```csharp

    Console.WriteLine($"My name is {names[0]}.");

    Console.WriteLine($"I've added {names[2]} and {names[3]} to the list.");

    ```


    <span data-ttu-id="2f702-132">Доступ за пределами списка не предоставляется.</span><span class="sxs-lookup"><span data-stu-id="2f702-132">You're not allowed to access past the end of the list.</span></span> <span data-ttu-id="2f702-133">Вы можете проверить, как долго в списке используется свойство <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f702-133">You can check how long the list is using the <xref:System.Collections.Generic.List%601.Count%2A> property.</span></span> <span data-ttu-id="2f702-134">Добавьте следующий код, чтобы протестировать его:</span><span class="sxs-lookup"><span data-stu-id="2f702-134">Add the following code to try it:</span></span>


    ```csharp

    Console.WriteLine($"The list has {names.Count} people in it");

    ```


    <span data-ttu-id="2f702-135">Еще раз нажмите кнопку **Выполнить**, чтобы просмотреть результаты.</span><span class="sxs-lookup"><span data-stu-id="2f702-135">Click **Run** again to see the results.</span></span> <span data-ttu-id="2f702-136">В C# индексы начинаются с 0, поэтому максимальный допустимый индекс меньше, чем число элементов в списке.</span><span class="sxs-lookup"><span data-stu-id="2f702-136">In C#, indices start at 0, so the largest valid index is one less than the number of items in the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="2f702-137">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="2f702-137">This online coding experience is in preview mode.</span></span> <span data-ttu-id="2f702-138">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="2f702-138">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="2f702-139">Поиск по спискам и их сортировка</span><span class="sxs-lookup"><span data-stu-id="2f702-139">Search and sort lists</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="2f702-140">В наших примерах используются сравнительно небольшие списки. Но приложения часто создают списки с гораздо большим количеством элементов, иногда они исчисляются в тысячах.</span><span class="sxs-lookup"><span data-stu-id="2f702-140">Our samples use relatively small lists, but your applications may often create lists with many more elements, sometimes numbering in the thousands.</span></span> <span data-ttu-id="2f702-141">Чтобы найти элементы в таких больших коллекциях, необходимо выполнить поиск различных элементов по списку.</span><span class="sxs-lookup"><span data-stu-id="2f702-141">To find elements in these larger collections, you need to search the list for different items.</span></span> <span data-ttu-id="2f702-142">Метод <xref:System.Collections.Generic.List%601.IndexOf%2A> выполняет поиск элемента и возвращает его индекс.</span><span class="sxs-lookup"><span data-stu-id="2f702-142">The <xref:System.Collections.Generic.List%601.IndexOf%2A> method searches for an item and returns the index of the item.</span></span> <span data-ttu-id="2f702-143">Попробуйте, чтобы узнать, как это работает.</span><span class="sxs-lookup"><span data-stu-id="2f702-143">Try it to see how it works.</span></span>  <span data-ttu-id="2f702-144">Добавьте следующий фрагмент после написанного кода:</span><span class="sxs-lookup"><span data-stu-id="2f702-144">Add the following code below what you've written so far:</span></span>


    ```csharp

    var index = names.IndexOf("Felipe");

    if (index != -1)
      Console.WriteLine($"The name {names[index]} is at index {index}");

    var notFound = names.IndexOf("Not Found");
      Console.WriteLine($"When an item is not found, IndexOf returns {notFound}");
    ```


    <span data-ttu-id="2f702-145">Мы не всегда можем знать, присутствует ли элемент в списке, поэтому нужно обязательно проверять индекс, возвращенный <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f702-145">You may not know if an item is in the list, so you should always check the index returned by <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span></span> <span data-ttu-id="2f702-146">Если он имеет значение -1, элемент не найден.</span><span class="sxs-lookup"><span data-stu-id="2f702-146">If it is -1, the item was not found.</span></span>


    <span data-ttu-id="2f702-147">Кроме того, можно сортировать элементы в списке.</span><span class="sxs-lookup"><span data-stu-id="2f702-147">The items in your list can be sorted as well.</span></span> <span data-ttu-id="2f702-148">Метод <xref:System.Collections.Generic.List%601.Sort%2A> сортирует все элементы списка в обычном порядке (при использовании строк — в алфавитном порядке).</span><span class="sxs-lookup"><span data-stu-id="2f702-148">The <xref:System.Collections.Generic.List%601.Sort%2A> method sorts all the items in the list in their normal order (alphabetically in the case of strings).</span></span> <span data-ttu-id="2f702-149">Добавьте следующий фрагмент и снова выполните код:</span><span class="sxs-lookup"><span data-stu-id="2f702-149">Add this code and run again:</span></span>


    ```csharp

    names.Sort();

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    > [!NOTE]

    > <span data-ttu-id="2f702-150">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="2f702-150">This online coding experience is in preview mode.</span></span> <span data-ttu-id="2f702-151">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="2f702-151">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="2f702-152">Списки других типов</span><span class="sxs-lookup"><span data-stu-id="2f702-152">Lists of other types</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="2f702-153">Вы уже использовали в списках тип `string`.</span><span class="sxs-lookup"><span data-stu-id="2f702-153">You've been using the `string` type in lists so far.</span></span> <span data-ttu-id="2f702-154">Создадим <xref:System.Collections.Generic.List%601> с использованием другого типа.</span><span class="sxs-lookup"><span data-stu-id="2f702-154">Let's make a <xref:System.Collections.Generic.List%601> using a different type.</span></span> <span data-ttu-id="2f702-155">Сначала создадим набор чисел.</span><span class="sxs-lookup"><span data-stu-id="2f702-155">Let's build a set of numbers.</span></span> <span data-ttu-id="2f702-156">Удалите код, который вы написали, и замените его следующим кодом:</span><span class="sxs-lookup"><span data-stu-id="2f702-156">Delete the code you wrote so far, and replace it with the following code:</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};

    ```


    <span data-ttu-id="2f702-157">Будет создан список целых чисел. Для первых двух целых чисел будет задано значение 1.</span><span class="sxs-lookup"><span data-stu-id="2f702-157">That creates a list of integers, and sets the first two integers to the value 1.</span></span> <span data-ttu-id="2f702-158">*Последовательность Фибоначчи*, последовательность чисел, начинается с двух единиц.</span><span class="sxs-lookup"><span data-stu-id="2f702-158">The *Fibonacci Sequence*, a sequence of numbers, starts with two 1s.</span></span> <span data-ttu-id="2f702-159">Каждое следующее число Фибоначчи — это сумма двух предыдущих чисел.</span><span class="sxs-lookup"><span data-stu-id="2f702-159">Each next Fibonacci number is found by taking the sum of the previous two numbers.</span></span> <span data-ttu-id="2f702-160">Добавьте этот код:</span><span class="sxs-lookup"><span data-stu-id="2f702-160">Add this code:</span></span>


    ```csharp

    var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];

    var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];


    fibonacciNumbers.Add(previous + previous2);


    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="2f702-161">Нажмите кнопку **Выполнить**, чтобы просмотреть результаты.</span><span class="sxs-lookup"><span data-stu-id="2f702-161">Press **Run** to see the results;</span></span>


    > [!NOTE]

    > <span data-ttu-id="2f702-162">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="2f702-162">This online coding experience is in preview mode.</span></span> <span data-ttu-id="2f702-163">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="2f702-163">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="2f702-164">Задача</span><span class="sxs-lookup"><span data-stu-id="2f702-164">Challenge</span></span>
  durationInMinutes: 10
  content: >
    <span data-ttu-id="2f702-165">Попробуйте объединить некоторые идеи из этого и предыдущих занятий.</span><span class="sxs-lookup"><span data-stu-id="2f702-165">See if you can put together some of the concepts from this and earlier lessons.</span></span> <span data-ttu-id="2f702-166">Расширьте код с числами Фибоначчи, который вы создали.</span><span class="sxs-lookup"><span data-stu-id="2f702-166">Expand on what you've built so far with Fibonacci Numbers.</span></span> <span data-ttu-id="2f702-167">Напишите и протестируйте код для создания первых 20 чисел в последовательности.</span><span class="sxs-lookup"><span data-stu-id="2f702-167">Try and write the code to generate the first 20 numbers in the sequence.</span></span> <span data-ttu-id="2f702-168">Подсказка: 20-е число Фибоначчи — 6765.</span><span class="sxs-lookup"><span data-stu-id="2f702-168">(As a hint, the 20th Fibonacci number is 6765.)</span></span>


    > [!NOTE]

    > <span data-ttu-id="2f702-169">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="2f702-169">This online coding experience is in preview mode.</span></span> <span data-ttu-id="2f702-170">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="2f702-170">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="2f702-171">Выполнение задачи</span><span class="sxs-lookup"><span data-stu-id="2f702-171">Complete challenge</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="2f702-172">В результате получилось нечто подобное?</span><span class="sxs-lookup"><span data-stu-id="2f702-172">Did you come up with something like this?</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};


    while (fibonacciNumbers.Count < 20)

    {
        var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
        var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];

        fibonacciNumbers.Add(previous + previous2);
    }

    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="2f702-173">При каждой итерации цикла суммируются два последних целых числа в списке. Полученное значение добавляется в список.</span><span class="sxs-lookup"><span data-stu-id="2f702-173">With each iteration of the loop, you're taking the last two integers in the list, summing them, and adding that value to the list.</span></span> <span data-ttu-id="2f702-174">Цикл повторяется, пока в список не будут добавлены 20 элементов.</span><span class="sxs-lookup"><span data-stu-id="2f702-174">The loop repeats until you've added 20 items to the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="2f702-175">Этот онлайн-интерфейс для написания кода находится на этапе предварительной версии.</span><span class="sxs-lookup"><span data-stu-id="2f702-175">This online coding experience is in preview mode.</span></span> <span data-ttu-id="2f702-176">При возникновении проблем сообщите о них на странице [репозитория dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="2f702-176">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >-
    <span data-ttu-id="2f702-177">Вы выполнили все задачи в интерактивном руководстве.</span><span class="sxs-lookup"><span data-stu-id="2f702-177">You've completed the list interactive tutorial.</span></span> <span data-ttu-id="2f702-178">Это последний документ из серии интерактивных вводных руководств по C#.</span><span class="sxs-lookup"><span data-stu-id="2f702-178">That's the final introduction to C# interactive tutorial.</span></span> <span data-ttu-id="2f702-179">Вы можете скачать пакет SDK для .NET Core на [сайте .NET](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial), создать проект на своем компьютере и продолжать писать код.</span><span class="sxs-lookup"><span data-stu-id="2f702-179">You can visit the [.NET site](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) to download the .NET Core SDK, create a project on your machine, and keep coding.</span></span> <span data-ttu-id="2f702-180">На шаге "Продолжение обучения" вы вернетесь к этим учебникам, чтобы создавать проекты на своем компьютере.</span><span class="sxs-lookup"><span data-stu-id="2f702-180">The "Keep Learning" step brings you back to these tutorials to build projects on your machine.</span></span>


    <span data-ttu-id="2f702-181">Дополнительные сведения о [коллекциях .NET](../../../standard/collections/index.md) см. в следующих статьях:</span><span class="sxs-lookup"><span data-stu-id="2f702-181">You can learn more about [.NET collections](../../../standard/collections/index.md) in the following articles:</span></span>

    - [<span data-ttu-id="2f702-182">Выбор типа коллекции</span><span class="sxs-lookup"><span data-stu-id="2f702-182">Selecting a collection type</span></span>](../../../standard/collections/selecting-a-collection-class.md)

    - [<span data-ttu-id="2f702-183">Часто используемые типы коллекций</span><span class="sxs-lookup"><span data-stu-id="2f702-183">Commonly used collection types</span></span>](../../../standard/collections/commonly-used-collection-types.md)

    - [<span data-ttu-id="2f702-184">Когда следует использовать универсальные коллекции</span><span class="sxs-lookup"><span data-stu-id="2f702-184">When to use generic collections</span></span>](../../../standard/collections/when-to-use-generic-collections.md)
